name: Build and Test userms

on:
  push:
    branches:
      - "main"
    paths:
      - 'userms/**'
  pull_request:
    branches:
      - "main"
    paths:
      - 'userms/**'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    # Set up JDK 21
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    # Build and test bookingms
    - name: Build and Test bookingms
      run: |
        cd bookingms
        ./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=raihanrsd02/bookingms:latest

    # Step 5: Log in to Docker Hub (or another Docker registry)
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 6: Push Docker image to Docker Hub
    - name: Push Docker Image to Docker Hub
      run: |
        docker push raihanrsd02/bookingms:latest

    # Step 7: Log in to Azure to interact with AKS
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

    # Step 8: Get AKS credentials
    - name: Get AKS credentials
      run: |
        az aks get-credentials --resource-group ${{ secrets.K8S_CLUSTER_RESOURCE_GROUP }} --name ${{ secrets.K8S_CLUSTER_NAME }}

    # Step 9: Deploy to AKS
    - name: Deploy to AKS
      run: |
        kubectl apply -f ./azure-configs.yaml/bootsrap/user/user-depl.yml
